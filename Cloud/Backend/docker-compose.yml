version: '3'

services:
  # 后端API服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: arm-detector-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_DBNAME=arm_detector_db
      - MQTT_BROKER_URL=tcp://mqtt_broker:1883
      - MQTT_TOPIC_SENSORS=armdetector/sensor/data
      - MQTT_TOPIC_COMMAND_PUBLISH_TEMPLATE=armdetector/device/%s/command
      - MQTT_TOPIC_RESPONSE_SUBSCRIBE_PATTERN=armdetector/device/+/response
      - LOGGING_LEVEL=info
    depends_on:
      db:
        condition: service_healthy
      mqtt_broker:
        condition: service_started
    volumes:
      - ./configs:/app/configs
    networks:
      - arm-detector-network

  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    container_name: arm-detector-db
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=arm_detector_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - arm-detector-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MQTT Broker (Mosquitto)
  mqtt_broker:
    image: eclipse-mosquitto:latest
    container_name: arm-detector-mqtt
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - arm-detector-network

networks:
  arm-detector-network:
    driver: bridge

volumes:
  postgres_data: 